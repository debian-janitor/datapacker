<!DOCTYPE reference PUBLIC "-//OASIS//DTD DocBook V4.1//EN" [
  <!ENTITY datapacker "<application>datapacker</application>">
]>
<!--      "file:///usr/share/sgml/docbook/dtd/xml/4.2/docbookx.dtd"> -->

<reference>
  <title>datapacker Manual</title>

  <refentry>
    <refentryinfo>
      <address><email>jgoerzen@complete.org</email></address>
      <author><firstname>John</firstname><surname>Goerzen</surname></author>
    </refentryinfo>

    <refmeta>
      <refentrytitle>datapacker</refentrytitle>
      <manvolnum>1</manvolnum>
      <refmiscinfo>John Goerzen</refmiscinfo>
    </refmeta>

    <refnamediv>
      <refname>datapacker</refname>
      <refpurpose>Tool to pack files into the minimum number
        of bins</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <cmdsynopsis>
        <command>datapacker</command>
        <arg>-0</arg>
        <arg>-a <replaceable>ACTION</replaceable></arg>
        <arg>-b <replaceable>FORMAT</replaceable></arg>
        <arg>-d</arg>
        <arg>-p</arg>
        <arg>-S <replaceable>SIZE</replaceable></arg>
        <arg choice="plain">-s <replaceable>SIZE</replaceable></arg>
        <arg choice="plain" rep="repeat"><replaceable>FILE</replaceable></arg>
      </cmdsynopsis>
      <cmdsynopsis>
	<command>datapacker</command>
	<group choice="plain"><arg>-h</arg><arg>--help</arg></group>
      </cmdsynopsis>
    </refsynopsisdiv>

    <refsect1>
      <title>Description</title>

      <para>&datapacker; is a tool to group files by size.  It is
        designed to group files such that they fill fixed-size
        containers (called "bins") using the minimum number of
        containers.  This is useful, for instance, if you want to
        archive a number of files to CD or DVD, and want to organize
        them such that you use the minimum possible number of CDs or
        DVDs.
      </para>

      <para>
        In many cases, &datapacker; executes almost instantaneously.
        Of particular note, the <literal>hardlink</literal> action
        (see OPTIONS below) can be used to effectively copy data into
        bins without having to actually copy the data at all.
      </para>
      
      <para>
        &datapacker; is a tool in the traditional Unix style; it can
        be used in pipes and call other tools.
      </para>

    <refsect1>
      <title>Options</title>
      <para>
        Here are the command-line options you may set for
        &datapacker;.  Please note that <option>-s</option> and at
        least one file (see FILE SPECIFICATION below) is mandatory.
      </para>

      <variablelist>
        <varlistentry>
          <term>-0</term>
          <term>--null</term>
          <listitem><para>
              When reading a list of files from standard input (see
              FILE SPECIFICATION below), expect the input to be
              separated by NULL (ASCII 0) characters instead of one
              per line.  Especially useful with <command>find
                -print0</command>.
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>-a <replaceable>ACTION</replaceable></term>
          <term>--action=<replaceable>ACTION</replaceable></term>
          <listitem>
            <para>
              Defines what action to take with the matches.  Please
              note that, with any action, the output will be sorted by
              bin, with bin 1 first.  Possible
              actions include:
            </para>
            <variablelist>
              <varlistentry>
                <term>print</term>
                <listitem><para>Print one human-readable line per
                    file.  Each line contains the bin number (in the
                    format given by <option>-b</option>), an ASCII tab
                    character, then the filename.
                  </para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>printfull</term>
                <listitem><para>Print one semi-human-readable line per
                    bin.  Each line contains the bin number, then a list
                    of filenames to place in that bin,
                    with an ASCII tab character after the
                    bin number and between each filename.
                  </para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>print0</term>
                <listitem>
                  <para>
                    For each file, output the bin number (according to the
                    format given by <option>-b</option>), an ASCII
                    NULL character, the filename, and another ASCII
                    NULL character.  Ideal for use with <literal>xargs
                      -0 -L 2</literal>.
                  </para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>exec:<replaceable>COMMAND</replaceable></term>
                <listitem>
                <para>
                    For each file, execute the specified COMMAND via
                    the shell.  The environment passed to COMMAND will
                    contain two variables: DATAPACKERBIN will contain
                    the bin number (formatted according to
                    <option>-b</option>), and DATAPACKERFILE will
                    contain the filename as supplied to &datapacker;.
                    A nonzero exit code from any COMMAND will cause
                    &datapacker; to terminate.  If COMMAND contains
                    quotes, don't forget to quote the entire command,
                    as in:
                  </para>
                  <programlisting>
datapacker '--action=exec:ls -l "${DATAPACKERFILE}"'
                  </programlisting>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hardlink</term>
                <listitem>
                  <para>
                    For each file, create a hardlink at
                    <replaceable>bin</replaceable>/<replaceable>filename</replaceable>
                    pointing to the original input filename.  Creates
                    the directory <replaceable>bin</replaceable> as
                    necessary.  Alternative locations and formats for
                    <replaceable>bin</replaceable> can be specified
                    with <option>-b</option>.  All bin directories and
                    all input must reside on the same filesystem.
                  </para>
                  <para>
                    After you are done processing the results of the
                    bin, you may safely delete the bins without
                    deleting original data.  Alternatively, you could
                    leave the bins and delete the original data.
                    Either approach will be workable.
                  </para>
                  <para>
                    It is an error to attempt to make a hard link
                    across filesystems, or to have two input files
                    with the same filename in different paths.
                    &datapacker; will exit on either of these situations.
                  </para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>symlink</term>
                <listitem>
                  <para>Like <option>hardlink</option>, but create
                  symlinks instead.  Symlinks can span filesystems,
                  but you will lose information if you remove the
                  original (pre-bin) data.  Like
                  <option>hardlink</option>, it is an error to have a
                  single filename occur in multiple input directories
                  with this option.
                  </para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>-b <replaceable>FORMAT</replaceable></term>
          <term>--binfmt=<replaceable>FORMAT</replaceable></term>
          <listitem>
            <para>
              Defines the output format for the bin name.  This format
              is given as a <literal>%d</literal> input to a function
              that interprets it as
              <application>printf</application>(3) would.
              This can be useful both to define the name and the
              location of your bins.  When running &datapacker; with
              certain arguments, the bin format can be taken to be a
              directory in which files in that bin are linked.  The
              default is <literal>%03d</literal>, which outputs
              integers with leading zeros to make all bin names at
              least three characters wide.
            </para>
            <para>
              Other useful variants could include
              <literal>destdir/%d</literal> to put the string
              <literal>"destdir/</literal> in front of the bin number,
              which is rendered without leading zeros.
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>-d</term>
          <term>--debug</term>
          <listitem>
            <para>
              Enable debug mode.  This is here for future expansion
              and does not currently have any effect.
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--help</term>
          <listitem>
            <para>
              Display brief usage information and exit.
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>-p</term>
          <term>--preserve-order</term>
          <listitem>
            <para>
              Normally, &datapacker; uses an efficient algorithm that
              tries to rearrange files such that the number of bins
              required is minimized.  Sometimes you may instead wish
              to preserve the ordering of files at the expense of
              potentially using more bins.  In these cases, you would
              want to use this option.
            </para>
            <para>
              As an example of such a situation: perhaps you have
              taken one photo a day for several years.  You would like
              to archive these photos to CD, but you want them to be
              stored in chronological order.  You have named the files
              such that the names indicate order, so you can pass the
              file list to &datapacker; using <option>-p</option> to
              preserve the ordering in your bins.  Thus, bin 1 will
              contain the oldest files, bin 2 the second-oldest, and
              so on.  If <option>-p</option> wasn't used, you might
              use fewer CDs, but the photos would be spread out across
              all CDs without preserving your chronological order.
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>-s <replaceable>SIZE</replaceable></term>
          <term>--size=<replaceable>SIZE</replaceable></term>
          <listitem>
            <para>
              Gives the size of each bin in bytes.  Suffixes such as
              "k", "m", "g", etc. may be used to indicate kilobytes,
              megabytes, gigabytes, and so forth.  Numbers such as
              <literal>1.5g</literal> are valid, and if needed, will
              be rounded to the nearest possible integer value.
            </para>
            <para>
              The size of the first bin may be overridden with
              <option>-S</option>.
            </para>
            <para>
              Here are the sizes of some commonly-used bins.  For each
              item, I have provided you with both the underlying
              recording capacity of the disc and a suggested value for
              <option>-s</option>.  The suggested value for
              <option>-s</option> is lower than the underlying
              capacity because there is overhead imposed by the
              filesystem stored on the disc.  You will perhaps find
              that the suggested value for <option>-s</option> is
              lower than optimal for discs that contain few large
              files, and higher than desired for discs that contain
              vast amounts of small files.
            </para>
            <itemizedlist>
              <listitem><para>CD-ROM, 74-minute (standard): 650m / 600m</para>
              </listitem>
              <listitem><para>CD-ROM, 80-minute: 703m / 650m</para>
              </listitem>
              <listitem><para>CD-ROM, 90-minute: 790m / 740m</para>
              </listitem>
              <listitem><para>CD-ROM, 99-minute: 870m / 820m</para>
              </listitem>
              <listitem><para>DVD+-R: 4.377g / 4g</para>
              </listitem>
              <listitem><para>DVD+R, dual layer: 8.5g / 8g</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term>-S</term>
          <term>--size-first</term>
          <listitem>
            <para>
              The size of the first bin.  If not given, defaults to
              the value given with <option>-s</option>.  This may be
              useful if you will be using a mechanism outside
              &datapacker; to add additional information to the first
              bin: perhaps an index of which bin has which file, the
              information necessary to make a CD bootable, etc.  You
              may use the same suffixes as with <option>-s</option>
              with this option.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <refsect2>
        <title>File Specification</title>
        <para>
          After the options, you must supply one or more files to
          consider for packing into bins.  Alternatively, instead of
          listing files on the command line, you may list a single
          hyphen (<literal>-</literal>), which tells &datapacker; to
          read the list of files from standard input (stdin).
        </para>
        <para>
          When reading files from standard input, it is assumed that
          the list contains one distinct filename per line.  Seasoned
          POSIX veterans will recognize the inherent limitations in
          this format.  For that reason, when given
          <option>-0</option> in conjunction with the single file
          <literal>-</literal>, &datapacker; will instead expect, on
          standard input, a list of files, each one terminated by an
          ASCII NULL character.  Such a list can be easily generated
          with <application>find</application>(1) using its
          <option>-print0</option> option.
        </para>
      </refsect2>
    </refsect1>

    <refsect1>
      <title>Examples</title>
      <itemizedlist>
        <listitem>
          <para>
            Put all JPEG images in <literal>~/Pictures</literal>
            into bins (using hardlinks) under the pre-existing directory
            <literal>~/bins</literal>, no more than 600MB per bin:
          </para>
          <programlisting>
datapacker -b ~/bins/%03d -s 600m -a hardlink ~/Pictures/*.jpg
          </programlisting>
        </listitem>
        <listitem>
          <para>
            Find all JPEG images in <literal>~/Pictures</literal> or
            any subdirectory thereof, put them into bins (using
            hardlinks) under the pre-existing directory
            <literal>~/bins</literal>, no more than 600MB per bin:
          </para>
          <programlisting>
find ~/Pictures -name "*.jpg" -print0 | \
  datapacker -0 -b ~/bins/%03d -s 600m -a hardlink -
          </programlisting>
        </listitem>
      </itemizedlist>
    </refsect1>
      
    <refsect1>
      <title>Errors</title>
      <para>
        It is an error if any specified file exceeds the value given
        with <literal>-s</literal> or <literal>-S</literal>.
      </para>
      <para>
        It is also an error if any specified files disappear while
        &datapacker; is running.
      </para>
    </refsect1>
    <refsect1>
	<title>Bugs</title>
	<para>
          Reports of bugs should be reported online at the
          &datapacker; homepage.
          Debian users are encouraged to instead use the
	Debian
          bug-tracking system.
	</para>
    </refsect1>


    <refsect1>
      <title>Copyright</title>
      <para>&datapacker;, and this manual, are Copyright &copy; 2008 John Goerzen.</para>
      <para>
        All code, documentation, and build scripts are under the following
        license unless otherwise noted:
      </para>
      <para>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
      </para>
      <para>
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
      </para>
      <para>
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see
    <ulink url="http://www.gnu.org/licenses/"></ulink>.
      </para>
      <para>
The GNU General Public License is available in the file COPYING in the source
distribution.  Debian GNU/Linux users may find this in
/usr/share/common-licenses/GPL-3.
      </para>
      <para>
If the GPL is unacceptable for your uses, please e-mail me; alternative
terms can be negotiated for your project.
      </para>
    </refsect1>

    <refsect1>
      <title>Author</title>
      <para>&datapacker;, its libraries, documentation, and all included files, except where
	noted, was written by John Goerzen <email>jgoerzen@complete.org</email> and
	copyright is held as stated in the COPYRIGHT section.
      </para>

      <para>
	&datapacker; may be downloaded, and information found, from its
	<ulink url="http://software.complete.org/datapacker">homepage</ulink>.
      </para>

    </refsect1>

    <refsect1>
      <title>See Also</title>
      <para><application>mkisofs</application>(1),
	<application>genisoimage</application>(1)
      </para>
    </refsect1>
  </refentry>
</reference>

<!--
Local Variables:
mode: sgml
sgml-set-face: T
End:
-->
